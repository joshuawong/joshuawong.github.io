<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-03T00:21:21.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Runnable And Thread</title>
    <link href="http://yoursite.com/2016/10/02/Runnable-And-Thread/"/>
    <id>http://yoursite.com/2016/10/02/Runnable-And-Thread/</id>
    <published>2016-10-02T23:45:51.000Z</published>
    <updated>2016-10-03T00:21:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Implement-multi-threads"><a href="#Implement-multi-threads" class="headerlink" title="Implement multi-threads"></a>Implement multi-threads</h2><p>In Java, there are two methods to implement multi-threads, the first one is to inherit <strong><em>Thread</em></strong> class, the second one is the implement <strong><em>Runnable</em></strong> interface.</p>
<h2 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h2><p><strong><em>Thread</em></strong> class is defined in <strong><em>java.lang</em></strong>. A class can implement multi-thread by inheriting <strong><em>Thread</em></strong> class and overriding <strong><em>run()</em></strong> function. But the limitation of this method is that one class can only inherit from one parent class.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">// MyThread class</div><div class="line">class MyThread extends Thread&#123;</div><div class="line">  private String name;</div><div class="line">  public MyThread(String name)&#123;</div><div class="line">    super();</div><div class="line">    this.name = name;</div><div class="line">  &#125;</div><div class="line">  public void run()&#123;</div><div class="line">    for(int i = 0; i &lt; 10; i++)&#123;</div><div class="line">      System.out.println(&quot;Thread start: &quot; + this.name + &quot;, i =&quot; + i);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// Multi-thread example</div><div class="line">public class ThreadDemo&#123;</div><div class="line">  public static void main(String[] main)&#123;</div><div class="line">    MyThread thread1 = new MyThread(&quot;Thread A&quot;);</div><div class="line">    MyThread thread2 = new MyThread(&quot;Thread B&quot;);</div><div class="line">    thread1.start();</div><div class="line">    thread2.start();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Runnable"><a href="#Runnable" class="headerlink" title="Runnable"></a>Runnable</h2><p>In real world, we seldom use <strong><em>Thread</em></strong> class. Usually we use <strong><em>Runnable</em></strong> interface to implement multi-thread.</p>
<p>Advantages of implementing <strong><em>Runnable</em></strong> interface:</p>
<pre><code>1. avoid the limitation of single inhertiation, one class can implement multiple interfaces;
2. suitable for share resource.
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">// Runnable interface</div><div class="line">public interface Runnable&#123;</div><div class="line">  public void run();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// Example: rewrite MyThread class</div><div class="line">class MyThread implements Runnable&#123;</div><div class="line">  private String name;</div><div class="line">  public MyThread(String name)&#123;</div><div class="line">    this.name = name;</div><div class="line">  &#125;</div><div class="line">  public void run()&#123;</div><div class="line">    for(int i = 0; i &lt; 10; i++)&#123;</div><div class="line">      System.out.println(&quot;Thread start: &quot; + this.name + &quot;, i =&quot; + i);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>However, in <strong><em>Runnable</em></strong>, there is no <strong><em>start()</em></strong> function. Now, we can use a construtor method: <figure class="highlight plain"><figcaption><span>Thread(Runnable target)``` to instant ***Runnable*** subclass. Which means we can implement ***Runnable*** multi-thread by using ***Thread*** class.</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<p>import org.runnable.demo.MyThread;<br>public class ThreadDemo {<br>　　public static void main(String[] args) {<br>　　    MyThread thread1=new MyThread(“thread A”);<br>　　    MyThread thread2=new MyThread(“thread B”);<br>　　    new Thread(thread1).start();<br>　　    new Thread(thread2).start();<br>　　}<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Lastly, ***Thread*** class is subclass of ***Runnable*** interface. </div><div class="line"></div><div class="line">```public class Thread extends Object implements Runnable</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Implement-multi-threads&quot;&gt;&lt;a href=&quot;#Implement-multi-threads&quot; class=&quot;headerlink&quot; title=&quot;Implement multi-threads&quot;&gt;&lt;/a&gt;Implement multi-t
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Jiahao&#39;s Blog</title>
    <link href="http://yoursite.com/2016/10/02/hello-world/"/>
    <id>http://yoursite.com/2016/10/02/hello-world/</id>
    <published>2016-10-02T23:13:36.000Z</published>
    <updated>2016-10-02T23:41:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is for Jiahao’s personal note.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is for Jiahao’s personal note.&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
